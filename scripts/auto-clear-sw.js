// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ Service Worker –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞—Ö–æ–¥–µ
console.log('üßπ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ Service Worker...');

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
function clearServiceWorker() {
  // 1. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö Service Worker —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.getRegistrations().then(function(registrations) {
      console.log('üîç –ù–∞–π–¥–µ–Ω–æ Service Worker —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π:', registrations.length);
      for(let registration of registrations) {
        registration.unregister().then(function(boolean) {
          console.log('‚úÖ Service Worker —É–¥–∞–ª–µ–Ω:', boolean);
        });
      }
    });
  }

  // 2. –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π
  if ('caches' in window) {
    caches.keys().then(function(cacheNames) {
      console.log('üîç –ù–∞–π–¥–µ–Ω–æ –∫—ç—à–µ–π:', cacheNames.length);
      return Promise.all(
        cacheNames.map(function(cacheName) {
          console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∫—ç—à:', cacheName);
          return caches.delete(cacheName);
        })
      );
    }).then(function() {
      console.log('‚úÖ –í—Å–µ –∫—ç—à–∏ –æ—á–∏—â–µ–Ω—ã');
    });
  }

  // 3. –û—á–∏—Å—Ç–∫–∞ localStorage (—Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ)
  try {
    const oldKeys = ['language', 'sw-cache-version'];
    oldKeys.forEach(key => {
      if (localStorage.getItem(key)) {
        localStorage.removeItem(key);
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –∫–ª—é—á: ${key}`);
      }
    });
  } catch (e) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', e);
  }

  // 4. –û—á–∏—Å—Ç–∫–∞ sessionStorage
  try {
    sessionStorage.clear();
    console.log('‚úÖ sessionStorage –æ—á–∏—â–µ–Ω');
  } catch (e) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ sessionStorage:', e);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
clearServiceWorker();

// –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
window.addEventListener('beforeunload', clearServiceWorker);
window.addEventListener('load', clearServiceWorker);

console.log('üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');

