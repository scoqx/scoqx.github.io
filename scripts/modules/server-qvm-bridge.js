/**
 * Server-QVM Bridge
 * –ú–æ—Å—Ç –º–µ–∂–¥—É —ç–º—É–ª—è—Ç–æ—Ä–æ–º —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–º QVM
 * 
 * –ü–µ—Ä–µ–¥–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç —ç–º—É–ª—è—Ç–æ—Ä–∞ –≤ QVM —á–µ—Ä–µ–∑ syscalls
 */

class ServerQVMBridge {
    constructor() {
        this.serverEmulator = null;
        this.qvmSyscalls = null;
        this.isConnected = false;
    }
    
    /**
     * –ü–æ–¥–∫–ª—é—á–∏—Ç—å —ç–º—É–ª—è—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞ –∏ syscalls QVM
     */
    connect(serverEmulator, qvmSyscalls) {
        this.serverEmulator = serverEmulator;
        this.qvmSyscalls = qvmSyscalls;
        
        if (!serverEmulator || !qvmSyscalls) {
            console.error('[Bridge] ‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å: serverEmulator –∏–ª–∏ qvmSyscalls –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return false;
        }
        
        // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å callback –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        serverEmulator.setServerCommandCallback((command) => {
            this.onServerCommand(command);
        });
        
        // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å callback –Ω–∞ —Å–Ω–∞–ø—à–æ—Ç—ã
        serverEmulator.onSnapshot = (snapshot, connectedClients) => {
            this.onSnapshot(snapshot, connectedClients);
        };
        
        this.isConnected = true;
        console.log('[Bridge] ‚úì –ú–æ—Å—Ç –°–µ—Ä–≤–µ—Ä‚ÜíQVM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∫–æ–º–∞–Ω–¥—ã + —Å–Ω–∞–ø—à–æ—Ç—ã)');
        return true;
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
     */
    onServerCommand(command) {
        if (!this.qvmSyscalls) return;
        
        console.log(`[Bridge] üåâ –°–µ—Ä–≤–µ—Ä ‚Üí QVM: –∫–æ–º–∞–Ω–¥–∞ #${command.sequence}`);
        console.log(`[Bridge] ‚Üí ${command.command.substring(0, 80)}${command.command.length > 80 ? '...' : ''}`);
        
        // –ü–µ—Ä–µ–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ QVM —á–µ—Ä–µ–∑ syscalls (–£–ñ–ï –ù–ï –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ—Ç —Å–Ω–∞–ø—à–æ—Ç!)
        const sequence = this.qvmSyscalls.addServerCommand(command.command);
        
        // –£–≤–µ–¥–æ–º–∏—Ç—å QVM –æ –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥–µ (–µ—Å–ª–∏ QVM –∏–º–µ–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏)
        if (window.cgameVM && window.cgameVM.executeServerCommands) {
            window.cgameVM.executeServerCommands(sequence);
        }
    }
    
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–Ω–∞–ø—à–æ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
     */
    onSnapshot(snapshot, connectedClients) {
        if (!this.qvmSyscalls) {
            console.log('[Bridge] ‚ö†Ô∏è qvmSyscalls –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!');
            return;
        }
        
        // –ö–†–ò–¢–ò–ß–ù–û: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º serverCommandSequence –∏–∑ qvmSyscalls –≤ —Å–Ω–∞–ø—à–æ—Ç!
        // –ü–æ—Ç–æ–º—É —á—Ç–æ –∫–æ–º–∞–Ω–¥—ã –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ qvmSyscalls.addServerCommand()
        if (this.qvmSyscalls.serverCommandSequence > 0) {
            snapshot.serverCommandSequence = this.qvmSyscalls.serverCommandSequence;
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–Ω–∞–ø—à–æ—Ç—ã —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
        if (snapshot?.serverCommandSequence > 0) {
            console.log(`[Bridge] üîµ –°–Ω–∞–ø—à–æ—Ç —Å –∫–æ–º–∞–Ω–¥–∞–º–∏! serverTime=${snapshot.serverTime}ms, seq=${snapshot.serverCommandSequence}`);
        }
        
        // –ü–µ—Ä–µ–¥–∞—Ç—å —Å–Ω–∞–ø—à–æ—Ç –≤ QVM —á–µ—Ä–µ–∑ syscalls
        this.qvmSyscalls.receiveSnapshot(snapshot);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
     */
    sendTestCommand(commandString) {
        if (!this.serverEmulator) {
            console.error('[Bridge] –≠–º—É–ª—è—Ç–æ—Ä –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
            return;
        }
        
        // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º
        this.serverEmulator.sendServerCommandToAll(commandString);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ—Å—Ç–∞
window.serverQVMBridge = new ServerQVMBridge();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ—Å—Ç–∞
window.connectServerToQVM = function() {
    if (!window.serverEmulator) {
        console.error('[Bridge] –≠–º—É–ª—è—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ q3-server-emulator.js');
        return false;
    }
    
    if (!window.qvmSyscalls) {
        console.error('[Bridge] QVM Syscalls –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ QVM –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return false;
    }
    
    return window.serverQVMBridge.connect(window.serverEmulator, window.qvmSyscalls);
};

console.log('[Server-QVM Bridge] –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω ‚úì');

